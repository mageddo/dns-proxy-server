name: CD

on:
  pull_request:

#on:
#  push:
#    branches:
#      - master

permissions:
  contents: write

env:
  CURRENT_BRANCH: ${{ github.head_ref || github.ref_name }}

jobs:
  primary-release:
    runs-on: ubuntu-latest
    steps:
      - name: Explain
        run: |
          echo "Releases the Jar and Linux AMD64 version"

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: Set app version
        run: ./gradlew setVersionOnActions

      - name: Jar and Linux AMD64 Release
        run: |
          mkdir -p ./build/ \
          && { ( docker-compose -f docker-compose-deploy.yml up --build --force-recreate --exit-code-from deploy deploy ); EXITCODE=$?; } \
          && test $EXITCODE -eq 3 && echo "> Already released " && exit 0 \
          || test $EXITCODE -ne 0 && echo "> Unkown error" && exit $EXITCODE \
          || echo "Keep going ... " \
          && ls -lhS ./build/*
        env:
          # github token to deploy the binary
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: native-image-source.jar
          path: ./build/artifacts/native-image-source/dns-proxy-server.jar

      - name: Latest version changelog extraction
        uses: kemayo/actions-recent-changelog@v1
        with:
          input: RELEASE-NOTES.md
          output: VERSION-RELEASE-NOTES.md
      - name: Check Release Notes
        run: cat ./VERSION-RELEASE-NOTES.md

      - name: Github release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.APP_VERSION }}
          prerelease: true
          body_path: VERSION-RELEASE-NOTES.md
          files: |
            ./build/compressed-artifacts/*

