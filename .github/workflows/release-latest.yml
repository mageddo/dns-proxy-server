name: Release Latest
on:
  pull_request:
#  schedule:
#    - cron: "30 7 * * *"

# https://github.com/yakubique/github-releases
jobs:
  release-latest:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:

      - name: Checkout code
        uses: actions/checkout@v3
      - name: Find Latest Image
        run: |
          git tag --format='%(creatordate:short)|%(refname:strip=2)' --sort=-creatordate

      - name: Install Deps
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Find Releases
        id: find_releases
        uses: yakubique/github-releases@v1.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          repository: mageddo/dns-proxy-server
          sort: desc
          pre: false
          details: true

      - name: Define the latest Release
        run: |
          echo '${{ steps.find_releases.outputs.releases }}' | jq -r '.[].tag_name'  | head -n1 > found-version.txt &&\
          cat found-version.txt | grep -oP '\d+\.\d+.\d+' > latest-version.txt &&\
          cat found-version.txt && cat latest-version.txt

      - name: Check already released
        run: |
          LATEST_VERSION=$(cat latest-version.txt) &&\
          git rev-parse "${LATEST_VERSION}^{}" >/dev/null 2>&1 && echo "> Already released" && exit 3 || echo "Not released yet"

      - name: Create latest git tag
        run: |
          FOUND_VERSION=$(cat found-version.txt) &&\
          LATEST_VERSION=$(cat latest-version.txt) &&\
          git tag ${LATEST_VERSION} ${FOUND_VERSION} && git push origin --tags


#      APP_VERSION: ${{ needs.primary_release.outputs.APP_VERSION }}

#      - uses: actions/download-artifact@v3
#        with:
#          name: native-image-source
#          path: ./build/artifacts/native-image-source/
