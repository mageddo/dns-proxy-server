name: Release Latest

on:
  pull_request:
#  schedule:
#    - cron: "30 7 * * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# https://github.com/yakubique/github-releases
jobs:
  release-latest:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write

    steps:

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Install Deps
        run: sudo apt-get install rename -y

#      - name: Find Releases
#        id: find_releases
#        uses: yakubique/github-releases@v1.2
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          repository: mageddo/dns-proxy-server
#          sort: desc
#          pre: false
#          details: true

#      - name: Define the latest Release
#        run: |
#          echo '${{ steps.find_releases.outputs.releases }}' | jq -r '.[].tag_name'  | head -n1 > found-version.txt &&\
#          cat found-version.txt | grep -oP '\d+\.\d+.\d+' > latest-version.txt &&\
#          cat found-version.txt && cat latest-version.txt

#      - name: Check already released
#        run: |
#          LATEST_VERSION=$(cat latest-version.txt) &&\
#          git rev-parse "${LATEST_VERSION}^{}" >/dev/null 2>&1 && echo "> Already released" && exit 3 || echo "Not released yet"

      - name: Download Artifacts
        id: release_download
        uses: robinraju/release-downloader@v1
        with:
          latest: true
          preRelease: false
          tarBall: true
          zipBall: true
          out-file-path: 'artifacts'
          token: '${{ secrets.GITHUB_TOKEN }}'

      - name: Rename Artifacts
        run: rename 's/-snapshot//g' artifacts/*

      - name: Check Artifacts
        run: tree artifacts

      - name: Checks
        run: |
          echo ${{steps.release_download.outputs.tag_name}} ${{steps.release_download.outputs.release_name}} &&\
          echo toJSON(${{steps.release_download.outputs}})
      

      #      - name: Find Versions
#        id: version_finder
#        run: |
#          export CURRENT_VERSION=$(ls artifacts/ | grep -oP 'dns-proxy-server-\K(\d+.\d+\.\d+[-]*[\w]+)' | head -n1  &&\
#          echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_OUTPUT &&\
#          export LATEST_VERSION=$(ls artifacts/ | head -n1 | grep -oP '\d+.\d+.\d+') &&\
#          echo "LATEST_VERSION=${LATEST_VERSION}" >> $GITHUB_OUTPUT

#      - name: Check latest version
#        run: echo ${{ steps.version_finder.outputs.LATEST_VERSION }}

      - name: Github release latest
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.APP_VERSION }}
          append_body: true
          body: ''
          files: |
            ./build/compressed-artifacts/*

#      - name: Create latest git tag
#        run: |
#          FOUND_VERSION=$(cat found-version.txt) &&\
#          LATEST_VERSION=$(cat latest-version.txt) &&\
#          git tag ${LATEST_VERSION} refs/tags/${FOUND_VERSION} && git push origin --tags

#      - name: Github release latest
#        uses: softprops/action-gh-release@v1
#        with:
#          tag_name: ${{ env.APP_VERSION }}
#          append_body: true
#          body: ''
#          files: |
#            ./build/compressed-artifacts/*


#      APP_VERSION: ${{ needs.primary_release.outputs.APP_VERSION }}

#      - uses: actions/download-artifact@v3
#        with:
#          name: native-image-source
#          path: ./build/artifacts/native-image-source/


